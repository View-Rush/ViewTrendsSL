openapi: 3.0.3
info:
  title: ViewPredict AI - YouTube View Count Prediction API
  description: |
    Complete API for YouTube view count prediction platform with user authentication, 
    prediction management, analytics, and channel integration.
  version: 1.0.0
  contact:
    name: ViewPredict AI Support
    email: support@viewpredict.ai
    url: https://viewpredict.ai/support
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.viewpredict.ai/v1
    description: Production server
  - url: https://staging-api.viewpredict.ai/v1
    description: Staging server
  - url: http://localhost:3000/v1
    description: Local development server

tags:
  - name: Authentication
    description: User authentication and authorization endpoints
  - name: Users
    description: User profile and settings management
  - name: Predictions
    description: Video view count prediction operations
  - name: History
    description: Prediction history management
  - name: Analytics
    description: Analytics and insights endpoints
  - name: Channels
    description: YouTube channel connection and management
  - name: Notifications
    description: User notification management

security:
  - BearerAuth: []

paths:
  # ==================== AUTHENTICATION ====================
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      description: Create a new user account with email and password
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - fullName
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  minLength: 8
                  example: SecurePass123!
                fullName:
                  type: string
                  minLength: 2
                  maxLength: 100
                  example: John Doe
                channelUrl:
                  type: string
                  format: uri
                  example: https://youtube.com/@johndoe
                  description: Optional YouTube channel URL
                timezone:
                  type: string
                  example: America/New_York
                acceptTerms:
                  type: boolean
                  example: true
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: User registered successfully
                  data:
                    $ref: '#/components/schemas/AuthResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Conflict'

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login user
      description: Authenticate user with email and password
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: SecurePass123!
                rememberMe:
                  type: boolean
                  example: true
                  description: Extend token expiration time
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/AuthResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'

  /auth/google:
    post:
      tags:
        - Authentication
      summary: Google OAuth authentication
      description: Authenticate or register user using Google OAuth token
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - idToken
              properties:
                idToken:
                  type: string
                  description: Google OAuth ID token
                  example: eyJhbGciOiJSUzI1NiIsImtpZCI6IjI3...
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/AuthResponse'
        '400':
          $ref: '#/components/responses/BadRequest'

  /auth/refresh:
    post:
      tags:
        - Authentication
      summary: Refresh access token
      description: Get new access token using refresh token
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refreshToken
              properties:
                refreshToken:
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                      expiresIn:
                        type: integer
                        example: 3600
        '401':
          $ref: '#/components/responses/Unauthorized'

  /auth/logout:
    post:
      tags:
        - Authentication
      summary: Logout user
      description: Invalidate current access token and refresh token
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Logged out successfully

  /auth/forgot-password:
    post:
      tags:
        - Authentication
      summary: Request password reset
      description: Send password reset email to user
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
      responses:
        '200':
          description: Password reset email sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Password reset email sent

  /auth/reset-password:
    post:
      tags:
        - Authentication
      summary: Reset password
      description: Reset user password using reset token
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
                - newPassword
              properties:
                token:
                  type: string
                  example: abc123def456
                newPassword:
                  type: string
                  format: password
                  minLength: 8
                  example: NewSecurePass123!
      responses:
        '200':
          description: Password reset successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Password reset successfully
        '400':
          $ref: '#/components/responses/BadRequest'

  # ==================== USERS ====================
  /users/me:
    get:
      tags:
        - Users
      summary: Get current user profile
      description: Retrieve authenticated user's profile information
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'

    patch:
      tags:
        - Users
      summary: Update user profile
      description: Update authenticated user's profile information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullName:
                  type: string
                  example: John Smith
                bio:
                  type: string
                  maxLength: 500
                  example: Content creator and YouTuber
                timezone:
                  type: string
                  example: America/Los_Angeles
                avatar:
                  type: string
                  format: uri
                  example: https://cdn.viewpredict.ai/avatars/user123.jpg
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'

  /users/me/password:
    put:
      tags:
        - Users
      summary: Change password
      description: Change authenticated user's password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - currentPassword
                - newPassword
              properties:
                currentPassword:
                  type: string
                  format: password
                  example: OldPass123!
                newPassword:
                  type: string
                  format: password
                  minLength: 8
                  example: NewPass123!
      responses:
        '200':
          description: Password changed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Password changed successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /users/me/stats:
    get:
      tags:
        - Users
      summary: Get user statistics
      description: Retrieve user's overall statistics and metrics
      responses:
        '200':
          description: Statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/UserStats'

  /users/me/notifications/settings:
    get:
      tags:
        - Users
      summary: Get notification settings
      description: Retrieve user's notification preferences
      responses:
        '200':
          description: Notification settings retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/NotificationSettings'

    put:
      tags:
        - Users
      summary: Update notification settings
      description: Update user's notification preferences
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationSettings'
      responses:
        '200':
          description: Settings updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/NotificationSettings'

  # ==================== PREDICTIONS ====================
  /predictions:
    post:
      tags:
        - Predictions
      summary: Create new prediction
      description: Submit video metadata to predict view count
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PredictionRequest'
      responses:
        '201':
          description: Prediction created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/PredictionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '402':
          description: Insufficient credits
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: INSUFFICIENT_CREDITS
                      message:
                        type: string
                        example: You have insufficient credits to make a prediction
                      creditsRequired:
                        type: integer
                        example: 1
                      creditsAvailable:
                        type: integer
                        example: 0
        '429':
          $ref: '#/components/responses/TooManyRequests'

    get:
      tags:
        - Predictions
      summary: List user predictions
      description: Retrieve paginated list of user's predictions
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
          example: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          example: 20
        - name: sortBy
          in: query
          schema:
            type: string
            enum: [createdAt, predictedViews, accuracy]
            default: createdAt
          example: createdAt
        - name: order
          in: query
          schema:
            type: string
            enum: [asc, desc]
            default: desc
          example: desc
        - name: category
          in: query
          schema:
            type: string
          example: Gaming
        - name: status
          in: query
          schema:
            type: string
            enum: [pending, tracking, completed]
          example: completed
        - name: dateFrom
          in: query
          schema:
            type: string
            format: date
          example: 2025-01-01
        - name: dateTo
          in: query
          schema:
            type: string
            format: date
          example: 2025-12-31
        - name: search
          in: query
          schema:
            type: string
          example: How to code
          description: Search in video titles
      responses:
        '200':
          description: Predictions retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PredictionSummary'
                  pagination:
                    $ref: '#/components/schemas/Pagination'

  /predictions/{id}:
    get:
      tags:
        - Predictions
      summary: Get prediction details
      description: Retrieve detailed information about a specific prediction
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: pred_abc123
      responses:
        '200':
          description: Prediction retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/PredictionDetail'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      tags:
        - Predictions
      summary: Delete prediction
      description: Delete a specific prediction from history
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: pred_abc123
      responses:
        '200':
          description: Prediction deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Prediction deleted successfully
        '404':
          $ref: '#/components/responses/NotFound'

    patch:
      tags:
        - Predictions
      summary: Update prediction
      description: Update prediction with actual view count for tracking
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: pred_abc123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                actualViews:
                  type: integer
                  example: 125000
                  description: Actual view count after video is published
                notes:
                  type: string
                  maxLength: 1000
                  example: Video performed better than expected
      responses:
        '200':
          description: Prediction updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/PredictionDetail'

  /predictions/{id}/repredict:
    post:
      tags:
        - Predictions
      summary: Rerun prediction
      description: Create a new prediction based on previous prediction's data
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: pred_abc123
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                updateFields:
                  type: object
                  description: Optional fields to update before repredicting
                  additionalProperties: true
      responses:
        '201':
          description: New prediction created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/PredictionResponse'

  /predictions/bulk-delete:
    delete:
      tags:
        - Predictions
      summary: Delete multiple predictions
      description: Delete multiple predictions at once
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - predictionIds
              properties:
                predictionIds:
                  type: array
                  items:
                    type: string
                  example: [pred_abc123, pred_def456, pred_ghi789]
      responses:
        '200':
          description: Predictions deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 3 predictions deleted successfully
                  deletedCount:
                    type: integer
                    example: 3

  /predictions/export:
    get:
      tags:
        - Predictions
      summary: Export predictions
      description: Export user's predictions as CSV
      parameters:
        - name: format
          in: query
          schema:
            type: string
            enum: [csv, json]
            default: csv
          example: csv
        - name: dateFrom
          in: query
          schema:
            type: string
            format: date
          example: 2025-01-01
        - name: dateTo
          in: query
          schema:
            type: string
            format: date
          example: 2025-12-31
      responses:
        '200':
          description: Export file generated
          content:
            text/csv:
              schema:
                type: string
                format: binary
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PredictionDetail'

  /predictions/drafts:
    get:
      tags:
        - Predictions
      summary: List saved drafts
      description: Retrieve user's saved prediction drafts
      responses:
        '200':
          description: Drafts retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PredictionDraft'

    post:
      tags:
        - Predictions
      summary: Save prediction draft
      description: Save prediction form data as draft
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: My Draft Prediction
                data:
                  $ref: '#/components/schemas/PredictionRequest'
      responses:
        '201':
          description: Draft saved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/PredictionDraft'

  /predictions/drafts/{id}:
    delete:
      tags:
        - Predictions
      summary: Delete draft
      description: Delete a saved prediction draft
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: draft_abc123
      responses:
        '200':
          description: Draft deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true

  # ==================== ANALYTICS ====================
  /analytics/dashboard:
    get:
      tags:
        - Analytics
      summary: Get dashboard analytics
      description: Retrieve comprehensive analytics for dashboard
      parameters:
        - name: period
          in: query
          schema:
            type: string
            enum: [7d, 30d, 3m, 1y, all]
            default: 30d
          example: 30d
      responses:
        '200':
          description: Analytics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/DashboardAnalytics'

  /analytics/accuracy-over-time:
    get:
      tags:
        - Analytics
      summary: Get accuracy over time
      description: Retrieve prediction accuracy trends over time
      parameters:
        - name: period
          in: query
          schema:
            type: string
            enum: [7d, 30d, 3m, 1y, all]
            default: 30d
          example: 30d
        - name: groupBy
          in: query
          schema:
            type: string
            enum: [day, week, month]
            default: day
          example: day
      responses:
        '200':
          description: Accuracy data retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                          example: 2025-10-01
                        averageAccuracy:
                          type: number
                          format: float
                          example: 78.5
                        predictionCount:
                          type: integer
                          example: 12

  /analytics/predicted-vs-actual:
    get:
      tags:
        - Analytics
      summary: Get predicted vs actual comparison
      description: Retrieve scatter plot data comparing predicted and actual views
      parameters:
        - name: period
          in: query
          schema:
            type: string
            enum: [7d, 30d, 3m, 1y, all]
            default: 30d
        - name: category
          in: query
          schema:
            type: string
          example: Gaming
      responses:
        '200':
          description: Comparison data retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        predictionId:
                          type: string
                          example: pred_abc123
                        predictedViews:
                          type: integer
                          example: 100000
                        actualViews:
                          type: integer
                          example: 125000
                        category:
                          type: string
                          example: Gaming
                        accuracy:
                          type: number
                          format: float
                          example: 80.0

  /analytics/category-performance:
    get:
      tags:
        - Analytics
      summary: Get category performance
      description: Retrieve performance metrics by video category
      parameters:
        - name: period
          in: query
          schema:
            type: string
            enum: [7d, 30d, 3m, 1y, all]
            default: 30d
      responses:
        '200':
          description: Category performance retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        category:
                          type: string
                          example: Gaming
                        predictionCount:
                          type: integer
                          example: 45
                        averageAccuracy:
                          type: number
                          format: float
                          example: 82.5
                        averagePredictedViews:
                          type: integer
                          example: 150000
                        averageActualViews:
                          type: integer
                          example: 145000

  /analytics/factor-importance:
    get:
      tags:
        - Analytics
      summary: Get factor importance
      description: Retrieve importance scores for prediction factors
      parameters:
        - name: period
          in: query
          schema:
            type: string
            enum: [7d, 30d, 3m, 1y, all]
            default: 30d
      responses:
        '200':
          description: Factor importance retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        factor:
                          type: string
                          example: titleOptimization
                        importance:
                          type: number
                          format: float
                          minimum: 0
                          maximum: 100
                          example: 35.5
                        trend:
                          type: string
                          enum: [increasing, decreasing, stable]
                          example: increasing

  /analytics/upload-time-heatmap:
    get:
      tags:
        - Analytics
      summary: Get upload time heatmap
      description: Retrieve heatmap data for optimal upload times
      parameters:
        - name: period
          in: query
          schema:
            type: string
            enum: [30d, 3m, 1y, all]
            default: 30d
        - name: timezone
          in: query
          schema:
            type: string
          example: America/New_York
      responses:
        '200':
          description: Heatmap data retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        dayOfWeek:
                          type: integer
                          minimum: 0
                          maximum: 6
                          example: 3
                          description: 0 = Sunday, 6 = Saturday
                        hour:
                          type: integer
                          minimum: 0
                          maximum: 23
                          example: 14
                        averagePredictedViews:
                          type: integer
                          example: 175000
                        predictionCount:
                          type: integer
                          example: 8

  /analytics/insights:
    get:
      tags:
        - Analytics
      summary: Get personalized insights
      description: Retrieve AI-generated insights and recommendations
      responses:
        '200':
          description: Insights retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      patterns:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              example: mostPredictedCategory
                            title:
                              type: string
                              example: Gaming is your focus
                            description:
                              type: string
                              example: 60% of your predictions are in the Gaming category
                            value:
                              type: string
                              example: Gaming
                      recommendations:
                        type: array
                        items:
                          type: object
                          properties:
                            priority:
                              type: string
                              enum: [high, medium, low]
                              example: high
                            title:
                              type: string
                              example: Upload on Thursdays
                            description:
                              type: string
                              example: Your predictions show 23% higher views for Thursday uploads
                            actionable:
                              type: boolean
                              example: true
                      accuracyTrend:
                        type: object
                        properties:
                          direction:
                            type: string
                            enum: [improving, declining, stable]
                            example: improving
                          percentageChange:
                            type: number
                            format: float
                            example: 12.5
                          description:
                            type: string
                            example: Your prediction accuracy has improved by 12.5% this month

  # ==================== CHANNELS ====================
  /channels/connect:
    post:
      tags:
        - Channels
      summary: Connect YouTube channel
      description: Initiate YouTube channel connection via OAuth
      responses:
        '200':
          description: OAuth URL generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      authUrl:
                        type: string
                        format: uri
                        example: https://accounts.google.com/o/oauth2/v2/auth?client_id=...
                      state:
                        type: string
                        example: abc123xyz

  /channels/callback:
    get:
      tags:
        - Channels
      summary: OAuth callback
      description: Handle OAuth callback from YouTube
      security: []
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
          example: 4/0AY0e-g7...
        - name: state
          in: query
          required: true
          schema:
            type: string
          example: abc123xyz
      responses:
        '200':
          description: Channel connected successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ConnectedChannel'
        '400':
          $ref: '#/components/responses/BadRequest'

  /channels/me:
    get:
      tags:
        - Channels
      summary: Get connected channel
      description: Retrieve connected YouTube channel information
      responses:
        '200':
          description: Channel information retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ConnectedChannel'
        '404':
          description: No channel connected
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: NO_CHANNEL_CONNECTED
                      message:
                        type: string
                        example: No YouTube channel is connected to this account

    delete:
      tags:
        - Channels
      summary: Disconnect channel
      description: Disconnect YouTube channel from account
      responses:
        '200':
          description: Channel disconnected successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Channel disconnected successfully

  /channels/me/sync:
    post:
      tags:
        - Channels
      summary: Sync channel data
      description: Manually trigger channel data synchronization
      responses:
        '200':
          description: Sync initiated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      syncId:
                        type: string
                        example: sync_abc123
                      status:
                        type: string
                        enum: [pending, in_progress, completed, failed]
                        example: pending
                      estimatedCompletionTime:
                        type: string
                        format: date-time
                        example: 2025-10-03T12:35:00Z

  /channels/me/videos:
    get:
      tags:
        - Channels
      summary: Get channel videos
      description: Retrieve videos from connected YouTube channel
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 20
        - name: sortBy
          in: query
          schema:
            type: string
            enum: [publishedAt, viewCount, likeCount]
            default: publishedAt
        - name: order
          in: query
          schema:
            type: string
            enum: [asc, desc]
            default: desc
      responses:
        '200':
          description: Videos retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ChannelVideo'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '404':
          description: No channel connected
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: NO_CHANNEL_CONNECTED
                      message:
                        type: string
                        example: No YouTube channel is connected

  /channels/me/analytics:
    get:
      tags:
        - Channels
      summary: Get channel analytics
      description: Retrieve analytics data from connected YouTube channel
      parameters:
        - name: period
          in: query
          schema:
            type: string
            enum: [7d, 30d, 3m, 1y]
            default: 30d
        - name: metrics
          in: query
          schema:
            type: array
            items:
              type: string
              enum: [views, subscribers, estimatedMinutesWatched, averageViewDuration]
          style: form
          explode: false
          example: views,subscribers
      responses:
        '200':
          description: Channel analytics retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ChannelAnalytics'

  /channels/me/settings:
    get:
      tags:
        - Channels
      summary: Get channel settings
      description: Retrieve channel-specific settings
      responses:
        '200':
          description: Settings retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ChannelSettings'

    put:
      tags:
        - Channels
      summary: Update channel settings
      description: Update channel-specific settings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelSettings'
      responses:
        '200':
          description: Settings updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ChannelSettings'

  # ==================== NOTIFICATIONS ====================
  /notifications:
    get:
      tags:
        - Notifications
      summary: Get notifications
      description: Retrieve user's notifications
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 20
        - name: status
          in: query
          schema:
            type: string
            enum: [unread, read, all]
            default: all
        - name: type
          in: query
          schema:
            type: string
            enum: [prediction_complete, accuracy_milestone, weekly_summary, system]
      responses:
        '200':
          description: Notifications retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Notification'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  unreadCount:
                    type: integer
                    example: 5

  /notifications/{id}/mark-read:
    patch:
      tags:
        - Notifications
      summary: Mark notification as read
      description: Mark a specific notification as read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: notif_abc123
      responses:
        '200':
          description: Notification marked as read
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true

  /notifications/mark-all-read:
    patch:
      tags:
        - Notifications
      summary: Mark all notifications as read
      description: Mark all user's notifications as read
      responses:
        '200':
          description: All notifications marked as read
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: All notifications marked as read
                  updatedCount:
                    type: integer
                    example: 12

  /notifications/{id}:
    delete:
      tags:
        - Notifications
      summary: Delete notification
      description: Delete a specific notification
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: notif_abc123
      responses:
        '200':
          description: Notification deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true

  # ==================== HISTORY ====================
  /history/recent:
    get:
      tags:
        - History
      summary: Get recent predictions
      description: Retrieve most recent predictions for quick access
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 20
            default: 10
      responses:
        '200':
          description: Recent predictions retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PredictionSummary'

  /history/best-predictions:
    get:
      tags:
        - History
      summary: Get best predictions
      description: Retrieve predictions with highest accuracy
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 20
            default: 10
        - name: period
          in: query
          schema:
            type: string
            enum: [7d, 30d, 3m, 1y, all]
            default: all
      responses:
        '200':
          description: Best predictions retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PredictionSummary'

  # ==================== MISCELLANEOUS ====================
  /categories:
    get:
      tags:
        - Predictions
      summary: Get video categories
      description: Retrieve list of available video categories
      security: []
      responses:
        '200':
          description: Categories retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: gaming
                        name:
                          type: string
                          example: Gaming
                        description:
                          type: string
                          example: Video games, walkthroughs, reviews
                        icon:
                          type: string
                          example: 🎮

  /languages:
    get:
      tags:
        - Predictions
      summary: Get supported languages
      description: Retrieve list of supported video languages
      security: []
      responses:
        '200':
          description: Languages retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: en
                        name:
                          type: string
                          example: English
                        nativeName:
                          type: string
                          example: English

  /health:
    get:
      tags:
        - Miscellaneous
      summary: Health check
      description: Check API health status
      security: []
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: healthy
                  timestamp:
                    type: string
                    format: date-time
                    example: 2025-10-03T12:00:00Z
                  version:
                    type: string
                    example: 1.0.0
                  services:
                    type: object
                    properties:
                      database:
                        type: string
                        example: operational
                      mlModel:
                        type: string
                        example: operational
                      cache:
                        type: string
                        example: operational

# ==================== COMPONENTS ====================
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtained from login or registration

  responses:
    BadRequest:
      description: Bad request - validation error
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: object
                properties:
                  code:
                    type: string
                    example: VALIDATION_ERROR
                  message:
                    type: string
                    example: Validation failed
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: email
                        message:
                          type: string
                          example: Invalid email format

    Unauthorized:
      description: Unauthorized - invalid or missing authentication
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: object
                properties:
                  code:
                    type: string
                    example: UNAUTHORIZED
                  message:
                    type: string
                    example: Authentication required

    Forbidden:
      description: Forbidden - insufficient permissions
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: object
                properties:
                  code:
                    type: string
                    example: FORBIDDEN
                  message:
                    type: string
                    example: You don't have permission to access this resource

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: object
                properties:
                  code:
                    type: string
                    example: NOT_FOUND
                  message:
                    type: string
                    example: Resource not found

    Conflict:
      description: Conflict - resource already exists
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: object
                properties:
                  code:
                    type: string
                    example: CONFLICT
                  message:
                    type: string
                    example: Email already exists

    TooManyRequests:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: object
                properties:
                  code:
                    type: string
                    example: RATE_LIMIT_EXCEEDED
                  message:
                    type: string
                    example: Too many requests. Please try again later
                  retryAfter:
                    type: integer
                    example: 60
                    description: Seconds until rate limit resets

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: object
                properties:
                  code:
                    type: string
                    example: INTERNAL_SERVER_ERROR
                  message:
                    type: string
                    example: An unexpected error occurred

  schemas:
    # ==================== AUTH SCHEMAS ====================
    AuthResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        tokens:
          type: object
          properties:
            accessToken:
              type: string
              example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
            refreshToken:
              type: string
              example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
            expiresIn:
              type: integer
              example: 3600
              description: Access token expiration time in seconds
            tokenType:
              type: string
              example: Bearer

    # ==================== USER SCHEMAS ====================
    User:
      type: object
      properties:
        id:
          type: string
          example: user_abc123
        email:
          type: string
          format: email
          example: user@example.com
        fullName:
          type: string
          example: John Doe
        avatar:
          type: string
          format: uri
          nullable: true
          example: https://cdn.viewpredict.ai/avatars/user123.jpg
        bio:
          type: string
          nullable: true
          example: Content creator and YouTuber
        timezone:
          type: string
          example: America/New_York
        createdAt:
          type: string
          format: date-time
          example: 2025-01-15T10:30:00Z
        lastLoginAt:
          type: string
          format: date-time
          example: 2025-10-03T08:15:00Z
        emailVerified:
          type: boolean
          example: true
        credits:
          type: integer
          example: 50
          description: Remaining prediction credits
        plan:
          type: string
          enum: [free, basic, pro, enterprise]
          example: free
        hasConnectedChannel:
          type: boolean
          example: true

    UserStats:
      type: object
      properties:
        totalPredictions:
          type: integer
          example: 127
        totalPredictionsThisMonth:
          type: integer
          example: 23
        monthlyChange:
          type: number
          format: float
          example: 15.5
          description: Percentage change from last month
        averageAccuracy:
          type: number
          format: float
          example: 78.5
          description: Average prediction accuracy percentage
        platformAverageAccuracy:
          type: number
          format: float
          example: 72.3
          description: Platform-wide average for comparison
        bestPredictionAccuracy:
          type: number
          format: float
          example: 95.8
        creditsRemaining:
          type: integer
          example: 50
        creditsUsedThisMonth:
          type: integer
          example: 23
        joinedDaysAgo:
          type: integer
          example: 264

    NotificationSettings:
      type: object
      properties:
        email:
          type: object
          properties:
            predictionComplete:
              type: boolean
              example: true
            weeklySummary:
              type: boolean
              example: true
            accuracyMilestones:
              type: boolean
              example: true
            productUpdates:
              type: boolean
              example: false
            marketing:
              type: boolean
              example: false
        inApp:
          type: object
          properties:
            predictionComplete:
              type: boolean
              example: true
            accuracyMilestones:
              type: boolean
              example: true
            systemAnnouncements:
              type: boolean
              example: true

    # ==================== PREDICTION SCHEMAS ====================
    PredictionRequest:
      type: object
      required:
        - videoTitle
        - videoDuration
        - category
      properties:
        videoTitle:
          type: string
          minLength: 1
          maxLength: 100
          example: How to Build a React App in 2025
        videoDescription:
          type: string
          maxLength: 5000
          nullable: true
          example: Complete tutorial on building modern React applications
        videoDuration:
          type: integer
          minimum: 1
          example: 720
          description: Video duration in seconds
        category:
          type: string
          example: Education
        tags:
          type: array
          maxItems: 15
          items:
            type: string
          example: [react, javascript, tutorial, web development]
        channelInfo:
          type: object
          properties:
            subscriberCount:
              type: integer
              minimum: 0
              example: 50000
            averageViewsPerVideo:
              type: integer
              minimum: 0
              example: 10000
            channelAgeMonths:
              type: integer
              minimum: 0
              example: 24
            uploadFrequency:
              type: string
              enum: [daily, weekly, biweekly, monthly, irregular]
              example: weekly
        publishDateTime:
          type: string
          format: date-time
          example: 2025-10-10T14:00:00Z
          description: Expected publish date and time
        thumbnailQuality:
          type: integer
          minimum: 1
          maximum: 10
          example: 8
          description: Thumbnail quality score
        hasCustomThumbnail:
          type: boolean
          example: true
        language:
          type: string
          example: en
        contentType:
          type: string
          enum: [original, commentary, tutorial, review, vlog, entertainment, other]
          example: tutorial
        targetAudience:
          type: string
          enum: [kids, teens, adults, all]
          example: adults
        isSeasonal:
          type: boolean
          example: false
        isTrending:
          type: boolean
          example: false
        promotionalBudget:
          type: number
          format: float
          minimum: 0
          nullable: true
          example: 100.00
          description: Promotional budget in USD

    PredictionResponse:
      type: object
      properties:
        predictionId:
          type: string
          example: pred_abc123
        predictedViews:
          type: integer
          example: 125000
        confidenceInterval:
          type: object
          properties:
            lower:
              type: integer
              example: 90000
            upper:
              type: integer
              example: 160000
        confidenceScore:
          type: number
          format: float
          minimum: 0
          maximum: 100
          example: 85.5
          description: Model confidence percentage
        factorContributions:
          type: object
          properties:
            channelStrength:
              type: number
              format: float
              example: 28.5
              description: Percentage contribution
            contentQuality:
              type: number
              format: float
              example: 35.2
            timingOptimization:
              type: number
              format: float
              example: 18.3
            topicRelevance:
              type: number
              format: float
              example: 18.0
        recommendations:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum: [title, timing, tags, thumbnail]
                example: title
              priority:
                type: string
                enum: [high, medium, low]
                example: high
              message:
                type: string
                example: Consider adding numbers or questions to your title
              impact:
                type: string
                example: Could increase views by 15-20%
        bestPublishTime:
          type: string
          format: date-time
          example: 2025-10-10T14:00:00Z
        suggestedTags:
          type: array
          items:
            type: string
          example: [react tutorial, react 2025, web development]
        createdAt:
          type: string
          format: date-time
          example: 2025-10-03T12:00:00Z

    PredictionSummary:
      type: object
      properties:
        id:
          type: string
          example: pred_abc123
        videoTitle:
          type: string
          example: How to Build a React App in 2025
        category:
          type: string
          example: Education
        predictedViews:
          type: integer
          example: 125000
        actualViews:
          type: integer
          nullable: true
          example: 118000
        accuracy:
          type: number
          format: float
          nullable: true
          example: 94.4
          description: Accuracy percentage (only if actualViews is available)
        status:
          type: string
          enum: [pending, tracking, completed]
          example: completed
        createdAt:
          type: string
          format: date-time
          example: 2025-10-03T12:00:00Z
        publishedAt:
          type: string
          format: date-time
          nullable: true
          example: 2025-10-10T14:00:00Z

    PredictionDetail:
      allOf:
        - $ref: '#/components/schemas/PredictionSummary'
        - type: object
          properties:
            videoDescription:
              type: string
              nullable: true
              example: Complete tutorial on building modern React applications
            videoDuration:
              type: integer
              example: 720
            tags:
              type: array
              items:
                type: string
              example: [react, javascript, tutorial]
            channelInfo:
              type: object
              properties:
                subscriberCount:
                  type: integer
                  example: 50000
                averageViewsPerVideo:
                  type: integer
                  example: 10000
                channelAgeMonths:
                  type: integer
                  example: 24
            confidenceInterval:
              type: object
              properties:
                lower:
                  type: integer
                  example: 90000
                upper:
                  type: integer
                  example: 160000
            confidenceScore:
              type: number
              format: float
              example: 85.5
            factorContributions:
              type: object
              properties:
                channelStrength:
                  type: number
                  format: float
                  example: 28.5
                contentQuality:
                  type: number
                  format: float
                  example: 35.2
                timingOptimization:
                  type: number
                  format: float
                  example: 18.3
                topicRelevance:
                  type: number
                  format: float
                  example: 18.0
            recommendations:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                    example: title
                  priority:
                    type: string
                    example: high
                  message:
                    type: string
                    example: Consider adding numbers to your title
            viewsTimeline:
              type: array
              nullable: true
              items:
                type: object
                properties:
                  date:
                    type: string
                    format: date
                    example: 2025-10-11
                  views:
                    type: integer
                    example: 5000
              description: Daily view count if tracking is enabled
            notes:
              type: string
              nullable: true
              maxLength: 1000
              example: Video performed better than expected
            updatedAt:
              type: string
              format: date-time
              example: 2025-10-20T10:00:00Z

    PredictionDraft:
      type: object
      properties:
        id:
          type: string
          example: draft_abc123
        title:
          type: string
          example: My Draft Prediction
        data:
          $ref: '#/components/schemas/PredictionRequest'
        createdAt:
          type: string
          format: date-time
          example: 2025-10-03T12:00:00Z
        updatedAt:
          type: string
          format: date-time
          example: 2025-10-03T12:30:00Z

    # ==================== ANALYTICS SCHEMAS ====================
    DashboardAnalytics:
      type: object
      properties:
        overview:
          type: object
          properties:
            totalPredictions:
              type: integer
              example: 127
            predictionsThisMonth:
              type: integer
              example: 23
            monthlyChange:
              type: number
              format: float
              example: 15.5
            averageAccuracy:
              type: number
              format: float
              example: 78.5
            creditsRemaining:
              type: integer
              example: 50
        recentPredictions:
          type: array
          maxItems: 10
          items:
            $ref: '#/components/schemas/PredictionSummary'
        topCategories:
          type: array
          maxItems: 5
          items:
            type: object
            properties:
              category:
                type: string
                example: Gaming
              count:
                type: integer
                example: 45
              percentage:
                type: number
                format: float
                example: 35.4
        accuracyTrend:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date
                example: 2025-10-01
              accuracy:
                type: number
                format: float
                example: 76.5

    # ==================== CHANNEL SCHEMAS ====================
    ConnectedChannel:
      type: object
      properties:
        channelId:
          type: string
          example: UCabc123xyz
        channelName:
          type: string
          example: Tech Tutorials Hub
        channelUrl:
          type: string
          format: uri
          example: https://youtube.com/@techtutorialshub
        thumbnail:
          type: string
          format: uri
          example: https://yt3.ggpht.com/abc123
        subscriberCount:
          type: integer
          example: 250000
        videoCount:
          type: integer
          example: 342
        viewCount:
          type: integer
          example: 15000000
        connectedAt:
          type: string
          format: date-time
          example: 2025-09-01T10:00:00Z
        lastSyncAt:
          type: string
          format: date-time
          example: 2025-10-03T08:00:00Z
        syncStatus:
          type: string
          enum: [active, syncing, error]
          example: active

    ChannelVideo:
      type: object
      properties:
        videoId:
          type: string
          example: dQw4w9WgXcQ
        title:
          type: string
          example: Amazing Tutorial Video
        description:
          type: string
          example: Learn something amazing in this video
        thumbnail:
          type: string
          format: uri
          example: https://i.ytimg.com/vi/dQw4w9WgXcQ/maxresdefault.jpg
        publishedAt:
          type: string
          format: date-time
          example: 2025-09-15T14:00:00Z
        duration:
          type: integer
          example: 720
          description: Duration in seconds
        viewCount:
          type: integer
          example: 125000
        likeCount:
          type: integer
          example: 8500
        commentCount:
          type: integer
          example: 342
        hasPrediction:
          type: boolean
          example: true
        predictionId:
          type: string
          nullable: true
          example: pred_abc123

    ChannelAnalytics:
      type: object
      properties:
        period:
          type: string
          example: 30d
        metrics:
          type: object
          properties:
            views:
              type: integer
              example: 500000
            subscribers:
              type: integer
              example: 2500
            estimatedMinutesWatched:
              type: integer
              example: 125000
            averageViewDuration:
              type: integer
              example: 180
              description: Average view duration in seconds
        timeline:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date
                example: 2025-10-01
              views:
                type: integer
                example: 15000
              subscribers:
                type: integer
                example: 85
              estimatedMinutesWatched:
                type: integer
                example: 3500
        topVideos:
          type: array
          maxItems: 10
          items:
            type: object
            properties:
              videoId:
                type: string
                example: dQw4w9WgXcQ
              title:
                type: string
                example: Top Performing Video
              views:
                type: integer
                example: 50000
              thumbnail:
                type: string
                format: uri
                example: https://i.ytimg.com/vi/dQw4w9WgXcQ/default.jpg
        demographics:
          type: object
          properties:
            ageGroups:
              type: array
              items:
                type: object
                properties:
                  ageRange:
                    type: string
                    example: 18-24
                  percentage:
                    type: number
                    format: float
                    example: 35.5
            gender:
              type: object
              properties:
                male:
                  type: number
                  format: float
                  example: 62.5
                female:
                  type: number
                  format: float
                  example: 35.8
                other:
                  type: number
                  format: float
                  example: 1.7
            topCountries:
              type: array
              items:
                type: object
                properties:
                  country:
                    type: string
                    example: United States
                  countryCode:
                    type: string
                    example: US
                  percentage:
                    type: number
                    format: float
                    example: 45.2

    ChannelSettings:
      type: object
      properties:
        autoTracking:
          type: boolean
          example: true
          description: Automatically track predictions for new videos
        syncFrequency:
          type: string
          enum: [hourly, daily, weekly]
          example: daily
          description: How often to sync channel data
        notifyOnNewVideo:
          type: boolean
          example: true
          description: Send notification when new video is detected
        autoCreatePrediction:
          type: boolean
          example: false
          description: Automatically create predictions for new videos

    # ==================== NOTIFICATION SCHEMAS ====================
    Notification:
      type: object
      properties:
        id:
          type: string
          example: notif_abc123
        type:
          type: string
          enum: [prediction_complete, accuracy_milestone, weekly_summary, system, channel_sync]
          example: prediction_complete
        title:
          type: string
          example: Prediction Completed
        message:
          type: string
          example: Your prediction for "How to Build a React App" is ready
        data:
          type: object
          nullable: true
          additionalProperties: true
          example:
            predictionId: pred_abc123
            videoTitle: How to Build a React App
        read:
          type: boolean
          example: false
        createdAt:
          type: string
          format: date-time
          example: 2025-10-03T12:00:00Z
        readAt:
          type: string
          format: date-time
          nullable: true
          example: null
        actionUrl:
          type: string
          format: uri
          nullable: true
          example: /predictions/pred_abc123

    # ==================== PAGINATION SCHEMA ====================
    Pagination:
      type: object
      properties:
        page:
          type: integer
          example: 1
        limit:
          type: integer
          example: 20
        totalItems:
          type: integer
          example: 127
        totalPages:
          type: integer
          example: 7
        hasNextPage:
          type: boolean
          example: true
        hasPreviousPage:
          type: boolean
          example: false

  # ==================== EXAMPLES ====================
  examples:
    SuccessfulLogin:
      value:
        success: true
        data:
          user:
            id: user_abc123
            email: user@example.com
            fullName: John Doe
            avatar: https://cdn.viewpredict.ai/avatars/user123.jpg
            timezone: America/New_York
            createdAt: 2025-01-15T10:30:00Z
            emailVerified: true
            credits: 50
            plan: free
            hasConnectedChannel: true
          tokens:
            accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
            refreshToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
            expiresIn: 3600
            tokenType: Bearer

    PredictionRequestExample:
      value:
        videoTitle: Complete React Tutorial for Beginners 2025
        videoDescription: Learn React from scratch with this comprehensive tutorial covering all the basics and advanced concepts
        videoDuration: 2400
        category: Education
        tags:
          - react
          - javascript
          - tutorial
          - web development
          - beginners
        channelInfo:
          subscriberCount: 50000
          averageViewsPerVideo: 10000
          channelAgeMonths: 24
          uploadFrequency: weekly
        publishDateTime: 2025-10-10T14:00:00Z
        thumbnailQuality: 8
        hasCustomThumbnail: true
        language: en
        contentType: tutorial
        targetAudience: adults
        isSeasonal: false
        isTrending: true

    PredictionResponseExample:
      value:
        predictionId: pred_abc123
        predictedViews: 125000
        confidenceInterval:
          lower: 90000
          upper: 160000
        confidenceScore: 85.5
        factorContributions:
          channelStrength: 28.5
          contentQuality: 35.2
          timingOptimization: 18.3
          topicRelevance: 18.0
        recommendations:
          - type: title
            priority: high
            message: Consider adding numbers or specific outcomes to your title
            impact: Could increase views by 15-20%
          - type: timing
            priority: medium
            message: Publishing on Thursday at 2 PM performs 18% better for your audience
            impact: Could increase views by 10-15%
          - type: tags
            priority: medium
            message: Add trending tags related to React 19 and modern JavaScript
            impact: Could increase views by 5-10%
        bestPublishTime: 2025-10-10T14:00:00Z
        suggestedTags:
          - react 2025
          - react hooks
          - javascript tutorial
          - web development 2025
        createdAt: 2025-10-03T12:00:00Z

    DashboardAnalyticsExample:
      value:
        overview:
          totalPredictions: 127
          predictionsThisMonth: 23
          monthlyChange: 15.5
          averageAccuracy: 78.5
          creditsRemaining: 50
        recentPredictions:
          - id: pred_abc123
            videoTitle: How to Build a React App in 2025
            category: Education
            predictedViews: 125000
            actualViews: 118000
            accuracy: 94.4
            status: completed
            createdAt: 2025-10-03T12:00:00Z
          - id: pred_def456
            videoTitle: JavaScript Tips and Tricks
            category: Education
            predictedViews: 85000
            actualViews: null
            accuracy: null
            status: pending
            createdAt: 2025-10-02T15:30:00Z
        topCategories:
          - category: Gaming
            count: 45
            percentage: 35.4
          - category: Education
            count: 38
            percentage: 29.9
          - category: Entertainment
            count: 28
            percentage: 22.0
        accuracyTrend:
          - date: 2025-09-28
            accuracy: 75.2
          - date: 2025-09-29
            accuracy: 76.8
          - date: 2025-09-30
            accuracy: 78.1
          - date: 2025-10-01
            accuracy: 77.5
          - date: 2025-10-02
            accuracy: 79.3

    ConnectedChannelExample:
      value:
        channelId: UCabc123xyz
        channelName: Tech Tutorials Hub
        channelUrl: https://youtube.com/@techtutorialshub
        thumbnail: https://yt3.ggpht.com/abc123
        subscriberCount: 250000
        videoCount: 342
        viewCount: 15000000
        connectedAt: 2025-09-01T10:00:00Z
        lastSyncAt: 2025-10-03T08:00:00Z
        syncStatus: active

    NotificationListExample:
      value:
        success: true
        data:
          - id: notif_abc123
            type: prediction_complete
            title: Prediction Completed
            message: Your prediction for "How to Build a React App" is ready with 125,000 predicted views
            data:
              predictionId: pred_abc123
              videoTitle: How to Build a React App
              predictedViews: 125000
            read: false
            createdAt: 2025-10-03T12:00:00Z
            readAt: null
            actionUrl: /predictions/pred_abc123
          - id: notif_def456
            type: accuracy_milestone
            title: Accuracy Milestone Reached!
            message: Congratulations! Your prediction accuracy has reached 80%
            data:
              accuracy: 80.2
              milestone: 80
            read: true
            createdAt: 2025-10-01T09:30:00Z
            readAt: 2025-10-01T10:15:00Z
            actionUrl: /analytics
          - id: notif_ghi789
            type: weekly_summary
            title: Your Weekly Summary
            message: You made 8 predictions this week with an average accuracy of 76.5%
            data:
              predictionsCount: 8
              averageAccuracy: 76.5
              topCategory: Gaming
            read: true
            createdAt: 2025-09-30T08:00:00Z
            readAt: 2025-09-30T08:45:00Z
            actionUrl: /history
        pagination:
          page: 1
          limit: 20
          totalItems: 45
          totalPages: 3
          hasNextPage: true
          hasPreviousPage: false
        unreadCount: 5

# ==================== WEBHOOKS (Optional for future implementation) ====================
#webhooks:
#  predictionComplete:
#    post:
#      summary: Prediction completed webhook
#      description: Triggered when a prediction is completed
#      requestBody:
#        content:
#          application/json:
#            schema:
#              type: object
#              properties:
#                event:
#                  type: string
#                  example: prediction.completed
#                timestamp:
#                  type: string
#                  format: date-time
#                  example: 2025-10-03T12:00:00Z
#                data:
#                  $ref: '#/components/schemas/PredictionResponse'
#      responses:
#        '200':
#          description: Webhook received successfully
#
#  channelSync:
#    post:
#      summary: Channel sync completed webhook
#      description: Triggered when channel data synchronization is completed
#      requestBody:
#        content:
#          application/json:
#            schema:
#              type: object
#              properties:
#                event:
#                  type: string
#                  example: channel.sync.completed
#                timestamp:
#                  type: string
#                  format: date-time
#                  example: 2025-10-03T08:00:00Z
#                data:
#                  type: object
#                  properties:
#                    channelId:
#                      type: string
#                      example: UCabc123xyz
#                    syncStatus:
#                      type: string
#                      example: completed
#                    videosUpdated:
#                      type: integer
#                      example: 12
#                    newVideos:
#                      type: integer
#                      example: 2
#      responses:
#        '200':
#          description: Webhook received successfully

# ==================== ADDITIONAL METADATA ====================
x-tagGroups:
  - name: Core API
    tags:
      - Authentication
      - Users
      - Predictions
  - name: Data & Insights
    tags:
      - History
      - Analytics
  - name: Integrations
    tags:
      - Channels
      - Notifications

x-rateLimit:
  default:
    limit: 100
    window: 15m
    description: 100 requests per 15 minutes for authenticated users
  predictions:
    limit: 50
    window: 1h
    description: 50 prediction requests per hour
  auth:
    limit: 5
    window: 15m
    description: 5 authentication attempts per 15 minutes per IP

x-errorCodes:
  - code: VALIDATION_ERROR
    message: Request validation failed
    httpStatus: 400
  - code: UNAUTHORIZED
    message: Authentication required
    httpStatus: 401
  - code: FORBIDDEN
    message: Insufficient permissions
    httpStatus: 403
  - code: NOT_FOUND
    message: Resource not found
    httpStatus: 404
  - code: CONFLICT
    message: Resource already exists
    httpStatus: 409
  - code: RATE_LIMIT_EXCEEDED
    message: Too many requests
    httpStatus: 429
  - code: INSUFFICIENT_CREDITS
    message: Not enough credits to perform action
    httpStatus: 402
  - code: NO_CHANNEL_CONNECTED
    message: No YouTube channel connected
    httpStatus: 404
  - code: CHANNEL_SYNC_FAILED
    message: Failed to sync channel data
    httpStatus: 500
  - code: PREDICTION_FAILED
  - code: PREDICTION_FAILED
    message: Prediction model failed to process request
    httpStatus: 500
  - code: INTERNAL_SERVER_ERROR
    message: An unexpected error occurred
    httpStatus: 500